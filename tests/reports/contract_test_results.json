{"created": 1758573876.1085608, "duration": 1.6356406211853027, "exitcode": 0, "root": "/Users/yoz/localcode/docqueryservice_instrumented/tests", "environment": {}, "summary": {"passed": 7, "total": 7, "collected": 23, "deselected": 16}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py", "type": "Module"}]}, {"nodeid": "test_api_contract.py::TestAPIHealth", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIHealth::test_health_endpoint_exists", "type": "Function", "lineno": 99, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIHealth::test_health_endpoint_response_format", "type": "Function", "lineno": 108, "deselected": true}]}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_endpoint_exists", "type": "Function", "lineno": 124}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_returns_json", "type": "Function", "lineno": 130}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_response_structure", "type": "Function", "lineno": 140}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_documents_structure", "type": "Function", "lineno": 148}]}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_json", "type": "Function", "lineno": 172}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_xml", "type": "Function", "lineno": 179}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter", "type": "Function", "lineno": 187}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter_limits", "type": "Function", "lineno": 199, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_offset_parameter", "type": "Function", "lineno": 209, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_field_selection", "type": "Function", "lineno": 228, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_search_query_parameter", "type": "Function", "lineno": 240, "deselected": true}]}, {"nodeid": "test_api_contract.py::TestAPIFiltering", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIFiltering::test_country_filter", "type": "Function", "lineno": 255, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_language_filter", "type": "Function", "lineno": 270, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_date_range_filter", "type": "Function", "lineno": 278, "deselected": true}]}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_invalid_format_parameter", "type": "Function", "lineno": 291, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_invalid_rows_parameter", "type": "Function", "lineno": 297, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_negative_offset", "type": "Function", "lineno": 303, "deselected": true}]}, {"nodeid": "test_api_contract.py::TestAPIConsistency", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIConsistency::test_same_request_same_results", "type": "Function", "lineno": 312, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIConsistency::test_pagination_consistency", "type": "Function", "lineno": 326, "deselected": true}]}, {"nodeid": "test_api_contract.py::TestAPIDataQuality", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIDataQuality::test_document_ids_are_unique", "type": "Function", "lineno": 340, "deselected": true}, {"nodeid": "test_api_contract.py::TestAPIDataQuality::test_document_fields_not_empty", "type": "Function", "lineno": 348, "deselected": true}]}, {"nodeid": "test_api_contract.py", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIHealth", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIFiltering", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIConsistency", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIDataQuality", "type": "Class"}]}], "tests": [{"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_endpoint_exists", "lineno": 124, "outcome": "passed", "keywords": ["test_basic_search_endpoint_exists", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.016209042000000007, "outcome": "passed"}, "call": {"duration": 0.296073833, "outcome": "passed"}, "teardown": {"duration": 0.00017399999999989646, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_returns_json", "lineno": 130, "outcome": "passed", "keywords": ["test_basic_search_returns_json", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.00019420800000002902, "outcome": "passed"}, "call": {"duration": 0.202762416, "outcome": "passed"}, "teardown": {"duration": 0.00022129199999998406, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_response_structure", "lineno": 140, "outcome": "passed", "keywords": ["test_search_response_structure", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.00022141700000000153, "outcome": "passed"}, "call": {"duration": 0.21352099999999996, "outcome": "passed"}, "teardown": {"duration": 0.00020770900000000037, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_documents_structure", "lineno": 148, "outcome": "passed", "keywords": ["test_search_documents_structure", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.00019387500000001, "outcome": "passed"}, "call": {"duration": 0.21650962500000004, "outcome": "passed"}, "teardown": {"duration": 0.00013866700000009224, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_json", "lineno": 172, "outcome": "passed", "keywords": ["test_format_parameter_json", "parameters", "pytestmark", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.00013737499999999514, "outcome": "passed"}, "call": {"duration": 0.20065729200000004, "outcome": "passed"}, "teardown": {"duration": 0.0006825830000001254, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_xml", "lineno": 179, "outcome": "passed", "keywords": ["test_format_parameter_xml", "parameters", "pytestmark", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.0006070000000000242, "outcome": "passed"}, "call": {"duration": 0.20355750000000006, "outcome": "passed"}, "teardown": {"duration": 0.0005610419999999561, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter", "lineno": 187, "outcome": "passed", "keywords": ["test_rows_parameter", "parameters", "pytestmark", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.0005544170000000292, "outcome": "passed"}, "call": {"duration": 0.20975979200000006, "outcome": "passed"}, "teardown": {"duration": 0.0005122499999998809, "outcome": "passed"}}], "warnings": [{"message": "urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020", "category": "NotOpenSSLWarning", "when": "collect", "filename": "/Users/yoz/Library/Python/3.9/lib/python/site-packages/urllib3/__init__.py", "lineno": 35}, {"message": "Unknown pytest.mark.health - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 100}, {"message": "Unknown pytest.mark.health - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 109}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 125}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 131}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 141}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 149}, {"message": "Unknown pytest.mark.parameters - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 173}, {"message": "Unknown pytest.mark.parameters - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 180}, {"message": "Unknown pytest.mark.parameters - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 188}]}