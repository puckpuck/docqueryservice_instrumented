{"created": 1758582740.336103, "duration": 0.20692992210388184, "exitcode": 0, "root": "/Users/yoz/localcode/docqueryservice_instrumented/tests", "environment": {}, "summary": {"skipped": 2, "passed": 21, "total": 23, "collected": 23}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py", "type": "Module"}]}, {"nodeid": "test_api_contract.py::TestAPIHealth", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIHealth::test_health_endpoint_exists", "type": "Function", "lineno": 99}, {"nodeid": "test_api_contract.py::TestAPIHealth::test_health_endpoint_response_format", "type": "Function", "lineno": 108}]}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_endpoint_exists", "type": "Function", "lineno": 124}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_returns_json", "type": "Function", "lineno": 130}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_response_structure", "type": "Function", "lineno": 140}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_documents_structure", "type": "Function", "lineno": 148}]}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_json", "type": "Function", "lineno": 172}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_xml", "type": "Function", "lineno": 179}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter", "type": "Function", "lineno": 187}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter_limits", "type": "Function", "lineno": 199}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_offset_parameter", "type": "Function", "lineno": 209}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_field_selection", "type": "Function", "lineno": 228}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_search_query_parameter", "type": "Function", "lineno": 240}]}, {"nodeid": "test_api_contract.py::TestAPIFiltering", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIFiltering::test_country_filter", "type": "Function", "lineno": 255}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_language_filter", "type": "Function", "lineno": 270}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_date_range_filter", "type": "Function", "lineno": 278}]}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_invalid_format_parameter", "type": "Function", "lineno": 291}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_invalid_rows_parameter", "type": "Function", "lineno": 297}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_negative_offset", "type": "Function", "lineno": 303}]}, {"nodeid": "test_api_contract.py::TestAPIConsistency", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIConsistency::test_same_request_same_results", "type": "Function", "lineno": 312}, {"nodeid": "test_api_contract.py::TestAPIConsistency::test_pagination_consistency", "type": "Function", "lineno": 326}]}, {"nodeid": "test_api_contract.py::TestAPIDataQuality", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIDataQuality::test_document_ids_are_unique", "type": "Function", "lineno": 340}, {"nodeid": "test_api_contract.py::TestAPIDataQuality::test_document_fields_not_empty", "type": "Function", "lineno": 348}]}, {"nodeid": "test_api_contract.py", "outcome": "passed", "result": [{"nodeid": "test_api_contract.py::TestAPIHealth", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIFiltering", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIConsistency", "type": "Class"}, {"nodeid": "test_api_contract.py::TestAPIDataQuality", "type": "Class"}]}], "tests": [{"nodeid": "test_api_contract.py::TestAPIHealth::test_health_endpoint_exists", "lineno": 99, "outcome": "skipped", "keywords": ["test_health_endpoint_exists", "health", "pytestmark", "TestAPIHealth", "test_api_contract.py", "tests", ""], "setup": {"duration": 0.01717887500000001, "outcome": "passed"}, "call": {"duration": 0.0058170419999999945, "outcome": "skipped", "longrepr": "('/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py', 107, 'Skipped: Health endpoint not implemented (acceptable for World Bank API)')"}, "teardown": {"duration": 7.399999999999074e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIHealth::test_health_endpoint_response_format", "lineno": 108, "outcome": "skipped", "keywords": ["test_health_endpoint_response_format", "health", "pytestmark", "TestAPIHealth", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.954199999998801e-05, "outcome": "passed"}, "call": {"duration": 0.0009219170000000221, "outcome": "skipped", "longrepr": "('/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py', 114, 'Skipped: Health endpoint not implemented (acceptable for World Bank API)')"}, "teardown": {"duration": 7.645800000000147e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_endpoint_exists", "lineno": 124, "outcome": "passed", "keywords": ["test_basic_search_endpoint_exists", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.795899999999857e-05, "outcome": "passed"}, "call": {"duration": 0.009524458000000013, "outcome": "passed"}, "teardown": {"duration": 7.666700000000248e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_basic_search_returns_json", "lineno": 130, "outcome": "passed", "keywords": ["test_basic_search_returns_json", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.620799999999428e-05, "outcome": "passed"}, "call": {"duration": 0.005791167000000014, "outcome": "passed"}, "teardown": {"duration": 7.533300000001075e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_response_structure", "lineno": 140, "outcome": "passed", "keywords": ["test_search_response_structure", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.520900000002051e-05, "outcome": "passed"}, "call": {"duration": 0.004736750000000012, "outcome": "passed"}, "teardown": {"duration": 6.975000000003506e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIBasicFunctionality::test_search_documents_structure", "lineno": 148, "outcome": "passed", "keywords": ["test_search_documents_structure", "basic", "pytestmark", "TestAPIBasicFunctionality", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.124999999996717e-05, "outcome": "passed"}, "call": {"duration": 0.01179825000000001, "outcome": "passed"}, "teardown": {"duration": 8.554199999999401e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_json", "lineno": 172, "outcome": "passed", "keywords": ["test_format_parameter_json", "parameters", "pytestmark", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.5208999999975e-05, "outcome": "passed"}, "call": {"duration": 0.005882458000000035, "outcome": "passed"}, "teardown": {"duration": 6.229200000001933e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_format_parameter_xml", "lineno": 179, "outcome": "passed", "keywords": ["test_format_parameter_xml", "parameters", "pytestmark", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.333399999998047e-05, "outcome": "passed"}, "call": {"duration": 0.007768625000000029, "outcome": "passed"}, "teardown": {"duration": 7.750000000000812e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter", "lineno": 187, "outcome": "passed", "keywords": ["test_rows_parameter", "parameters", "pytestmark", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.491700000000767e-05, "outcome": "passed"}, "call": {"duration": 0.003824374999999991, "outcome": "passed"}, "teardown": {"duration": 8.220799999997253e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_rows_parameter_limits", "lineno": 199, "outcome": "passed", "keywords": ["test_rows_parameter_limits", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.587500000000302e-05, "outcome": "passed"}, "call": {"duration": 0.004791041999999968, "outcome": "passed"}, "teardown": {"duration": 7.07919999999862e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_offset_parameter", "lineno": 209, "outcome": "passed", "keywords": ["test_offset_parameter", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.625000000000993e-05, "outcome": "passed"}, "call": {"duration": 0.009618249999999995, "outcome": "passed"}, "teardown": {"duration": 6.795799999997909e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_field_selection", "lineno": 228, "outcome": "passed", "keywords": ["test_field_selection", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.266599999999901e-05, "outcome": "passed"}, "call": {"duration": 0.003822250000000027, "outcome": "passed"}, "teardown": {"duration": 7.150000000000212e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIParameterHandling::test_search_query_parameter", "lineno": 240, "outcome": "passed", "keywords": ["test_search_query_parameter", "TestAPIParameterHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.48340000000236e-05, "outcome": "passed"}, "call": {"duration": 0.003688250000000004, "outcome": "passed"}, "teardown": {"duration": 7.162500000001959e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_country_filter", "lineno": 255, "outcome": "passed", "keywords": ["test_country_filter", "TestAPIFiltering", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.345900000000794e-05, "outcome": "passed"}, "call": {"duration": 0.003315874999999968, "outcome": "passed"}, "teardown": {"duration": 6.71669999999791e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_language_filter", "lineno": 270, "outcome": "passed", "keywords": ["test_language_filter", "TestAPIFiltering", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.350000000001412e-05, "outcome": "passed"}, "call": {"duration": 0.0034187079999999925, "outcome": "passed"}, "teardown": {"duration": 7.466699999997273e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIFiltering::test_date_range_filter", "lineno": 278, "outcome": "passed", "keywords": ["test_date_range_filter", "TestAPIFiltering", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.350000000001412e-05, "outcome": "passed"}, "call": {"duration": 0.005060500000000023, "outcome": "passed"}, "teardown": {"duration": 7.150000000000212e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_invalid_format_parameter", "lineno": 291, "outcome": "passed", "keywords": ["test_invalid_format_parameter", "TestAPIErrorHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 9.075000000002831e-05, "outcome": "passed"}, "call": {"duration": 0.0014197499999999974, "outcome": "passed"}, "teardown": {"duration": 6.537499999997864e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_invalid_rows_parameter", "lineno": 297, "outcome": "passed", "keywords": ["test_invalid_rows_parameter", "TestAPIErrorHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 6.708399999999504e-05, "outcome": "passed"}, "call": {"duration": 0.0012854159999999837, "outcome": "passed"}, "teardown": {"duration": 6.424999999998793e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIErrorHandling::test_negative_offset", "lineno": 303, "outcome": "passed", "keywords": ["test_negative_offset", "TestAPIErrorHandling", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.454200000001077e-05, "outcome": "passed"}, "call": {"duration": 0.0008182499999999648, "outcome": "passed"}, "teardown": {"duration": 5.2041999999974387e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIConsistency::test_same_request_same_results", "lineno": 312, "outcome": "passed", "keywords": ["test_same_request_same_results", "TestAPIConsistency", "test_api_contract.py", "tests", ""], "setup": {"duration": 6.741700000001405e-05, "outcome": "passed"}, "call": {"duration": 0.006852583999999995, "outcome": "passed"}, "teardown": {"duration": 6.24590000000147e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIConsistency::test_pagination_consistency", "lineno": 326, "outcome": "passed", "keywords": ["test_pagination_consistency", "TestAPIConsistency", "test_api_contract.py", "tests", ""], "setup": {"duration": 7.47919999999902e-05, "outcome": "passed"}, "call": {"duration": 0.007105707999999988, "outcome": "passed"}, "teardown": {"duration": 6.733300000000275e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIDataQuality::test_document_ids_are_unique", "lineno": 340, "outcome": "passed", "keywords": ["test_document_ids_are_unique", "TestAPIDataQuality", "test_api_contract.py", "tests", ""], "setup": {"duration": 8.04169999999993e-05, "outcome": "passed"}, "call": {"duration": 0.0034159579999999967, "outcome": "passed"}, "teardown": {"duration": 6.104099999998391e-05, "outcome": "passed"}}, {"nodeid": "test_api_contract.py::TestAPIDataQuality::test_document_fields_not_empty", "lineno": 348, "outcome": "passed", "keywords": ["test_document_fields_not_empty", "TestAPIDataQuality", "test_api_contract.py", "tests", ""], "setup": {"duration": 6.712500000000121e-05, "outcome": "passed"}, "call": {"duration": 0.0032457499999999917, "outcome": "passed"}, "teardown": {"duration": 0.00010458299999999143, "outcome": "passed"}}], "warnings": [{"message": "urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020", "category": "NotOpenSSLWarning", "when": "collect", "filename": "/Users/yoz/Library/Python/3.9/lib/python/site-packages/urllib3/__init__.py", "lineno": 35}, {"message": "Unknown pytest.mark.health - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 100}, {"message": "Unknown pytest.mark.health - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 109}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 125}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 131}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 141}, {"message": "Unknown pytest.mark.basic - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 149}, {"message": "Unknown pytest.mark.parameters - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 173}, {"message": "Unknown pytest.mark.parameters - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 180}, {"message": "Unknown pytest.mark.parameters - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/yoz/localcode/docqueryservice_instrumented/tests/test_api_contract.py", "lineno": 188}]}